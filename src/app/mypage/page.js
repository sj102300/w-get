'use client'

import { useEffect, useState } from 'react';
import './mypage.scss';
import Image from 'next/image';

export default async function MyPage() {

    let [user, setUser] = useState({
        name: '',
        introduction: "소개글을 작성해주세요!"
    });
    let [ploggingInfo, setPloggingInfo] = useState({
        accumulated_time: 0,
        count: 0,
        point:0,
        plastic:0,
        plastic_bag:0,
        can: 0,
        regular:0,
    });

    let accessToken;

    useEffect(() => {
        accessToken = sessionStorage.getItem("accessToken");
        fetch('/api/mypage', {
            method: "GET",
            headers: {
                Authorization: `Bearer ${accessToken}`
            }
        }).then((response) => {
            return response.json();
        }).then((result) => {
            setUser(result.user);
            setPloggingInfo(result.userPloggingInfo);
        })
    }, [])

    return (
        <div className='my-page'>
            <div className='profile-top'>
                <Image width={'92'} height={'102'} src="/images/EarthImg.png" alt="프로필사진" />
                <div><p>누적 시간</p><h4>{ploggingInfo.accumulated_time}</h4></div>
                <div><p>참여 횟수</p><h4>{ploggingInfo.count}</h4></div>
                <div><p>포인트</p><h4>{ploggingInfo.point}</h4></div>
            </div>


            <div className='profile-bottom'><p>{user.name} 님</p></div>
            <div className='profile-bottom'><p>{
                user.introduction === '' ? "소개글을 작성해주세요!" : user.introduction
            }</p></div>


            <div className='thick-line'></div>

            <h1>나의 쓰담</h1>
            <div className='my-logs'>
                <div><h2>{ploggingInfo.regular}</h2><p></p>일반쓰레기</div>
                <div><h2>{ploggingInfo.can}</h2><p></p>캔</div>
                <div><h2>{ploggingInfo.plastic}</h2><p>플라스틱</p></div>
                <div><h2>{ploggingInfo.plastic_bag}</h2><p>비닐</p></div>
            </div>
            <div className='thick-line'></div>

            <h1>1:1 문의</h1>
            <h1>자주하는 질문</h1>
            <h1>고객센터</h1>
            <h1>로그아웃</h1>
            <h1 onClick={()=>{
                fetch("/api/mypage", {
                    method: "DELETE",
                    headers: {
                        Authorization: `Bearer ${accessToken}`
                    },
                }).then((response)=>{
                    return response.json();
                }).then((result)=>{
                    window.alert('다음에 또 만나요!')
                })
            }}>회원탈퇴</h1>

        </div>
    )
}




// {
//     nameUpdate ?
//         <div className='profile-bottom'>
//             <input placeholder={user.name} />
//             <svg onClick={() => {
//                 setNameUpdate(true);

//             }} xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
//                 <path d="M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C13.4121 3 14.7482 3.32519 15.9375 3.90476M19.3125 6.375L11.4375 14.25L9.1875 12" stroke="black" stroke-linecap="round" stroke-linejoin="round" />
//             </svg>
//         </div>
//         :
//         <div className='profile-bottom'>
//             <p>{user.name} 님</p>
//             <svg onClick={() => {
//                 /* 수정 api보내기 */
//             }} xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 16 17" fill="none">
//                 <path fill-rule="evenodd" clip-rule="evenodd" d="M9.11753 3.37751C8.83253 2.2075 7.16747 2.2075 6.88247 3.37751C6.83991 3.55333 6.75645 3.71661 6.63887 3.85408C6.5213 3.99155 6.37292 4.09931 6.20583 4.1686C6.03873 4.2379 5.85764 4.26676 5.67728 4.25284C5.49692 4.23893 5.3224 4.18263 5.16791 4.08852C4.13888 3.46152 2.96134 4.63903 3.58836 5.66805C3.99337 6.33256 3.63411 7.19957 2.87809 7.38333C1.7073 7.66758 1.7073 9.33336 2.87809 9.61686C3.05395 9.65947 3.21727 9.743 3.35474 9.86067C3.49221 9.97833 3.59994 10.1268 3.66917 10.294C3.7384 10.4612 3.76716 10.6423 3.75312 10.8227C3.73908 11.0031 3.68263 11.1777 3.58836 11.3321C2.96134 12.3612 4.13888 13.5387 5.16791 12.9117C5.32237 12.8174 5.49691 12.7609 5.67732 12.7469C5.85772 12.7329 6.03889 12.7616 6.20608 12.8309C6.37326 12.9001 6.52174 13.0078 6.6394 13.1453C6.75707 13.2827 6.84061 13.4461 6.88322 13.6219C7.16747 14.7927 8.83328 14.7927 9.11679 13.6219C9.15953 13.4462 9.24315 13.283 9.36085 13.1456C9.47854 13.0082 9.62699 12.9005 9.79412 12.8313C9.96126 12.7621 10.1424 12.7333 10.3227 12.7473C10.5031 12.7613 10.6776 12.8176 10.8321 12.9117C11.8611 13.5387 13.0387 12.3612 12.4116 11.3321C12.3175 11.1776 12.2612 11.0031 12.2473 10.8228C12.2333 10.6424 12.2621 10.4613 12.3313 10.2942C12.4005 10.1271 12.5082 9.97861 12.6456 9.86092C12.7829 9.74323 12.9461 9.65961 13.1219 9.61686C14.2927 9.33261 14.2927 7.66683 13.1219 7.38333C12.946 7.34072 12.7827 7.25718 12.6453 7.13952C12.5078 7.02185 12.4001 6.87338 12.3308 6.7062C12.2616 6.53902 12.2328 6.35785 12.2469 6.17745C12.2609 5.99704 12.3174 5.82251 12.4116 5.66805C13.0387 4.63903 11.8611 3.46152 10.8321 4.08852C10.6776 4.18279 10.5031 4.23924 10.3227 4.25328C10.1423 4.26732 9.96111 4.23856 9.79392 4.16933C9.62674 4.1001 9.47826 3.99237 9.3606 3.8549C9.24293 3.71744 9.15939 3.55413 9.11679 3.37826L9.11753 3.37751Z" stroke="black" />
//                 <path d="M9.33333 8.5C9.33333 9.23638 8.73638 9.83333 8 9.83333C7.26362 9.83333 6.66667 9.23638 6.66667 8.5C6.66667 7.76362 7.26362 7.16667 8 7.16667C8.73638 7.16667 9.33333 7.76362 9.33333 8.5Z" stroke="black" />
//             </svg>
//         </div>
// }





// {
//     msgUpdate ?
//         <div className='profile-bottom'>
//             <textarea />
//             <svg onClick={() => {
//                 /* 수정 api보내기 */
//             }} xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
//                 <path d="M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C13.4121 3 14.7482 3.32519 15.9375 3.90476M19.3125 6.375L11.4375 14.25L9.1875 12" stroke="black" stroke-linecap="round" stroke-linejoin="round" />
//             </svg>
//         </div>
//         : <div className='profile-bottom'>
//             <p>소개글</p>
//             <svg onClick={() => { 
//                 /* 수정 api보내기 */
//                 }} xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 16 17" fill="none">
//                 <path fill-rule="evenodd" clip-rule="evenodd" d="M9.11753 3.37751C8.83253 2.2075 7.16747 2.2075 6.88247 3.37751C6.83991 3.55333 6.75645 3.71661 6.63887 3.85408C6.5213 3.99155 6.37292 4.09931 6.20583 4.1686C6.03873 4.2379 5.85764 4.26676 5.67728 4.25284C5.49692 4.23893 5.3224 4.18263 5.16791 4.08852C4.13888 3.46152 2.96134 4.63903 3.58836 5.66805C3.99337 6.33256 3.63411 7.19957 2.87809 7.38333C1.7073 7.66758 1.7073 9.33336 2.87809 9.61686C3.05395 9.65947 3.21727 9.743 3.35474 9.86067C3.49221 9.97833 3.59994 10.1268 3.66917 10.294C3.7384 10.4612 3.76716 10.6423 3.75312 10.8227C3.73908 11.0031 3.68263 11.1777 3.58836 11.3321C2.96134 12.3612 4.13888 13.5387 5.16791 12.9117C5.32237 12.8174 5.49691 12.7609 5.67732 12.7469C5.85772 12.7329 6.03889 12.7616 6.20608 12.8309C6.37326 12.9001 6.52174 13.0078 6.6394 13.1453C6.75707 13.2827 6.84061 13.4461 6.88322 13.6219C7.16747 14.7927 8.83328 14.7927 9.11679 13.6219C9.15953 13.4462 9.24315 13.283 9.36085 13.1456C9.47854 13.0082 9.62699 12.9005 9.79412 12.8313C9.96126 12.7621 10.1424 12.7333 10.3227 12.7473C10.5031 12.7613 10.6776 12.8176 10.8321 12.9117C11.8611 13.5387 13.0387 12.3612 12.4116 11.3321C12.3175 11.1776 12.2612 11.0031 12.2473 10.8228C12.2333 10.6424 12.2621 10.4613 12.3313 10.2942C12.4005 10.1271 12.5082 9.97861 12.6456 9.86092C12.7829 9.74323 12.9461 9.65961 13.1219 9.61686C14.2927 9.33261 14.2927 7.66683 13.1219 7.38333C12.946 7.34072 12.7827 7.25718 12.6453 7.13952C12.5078 7.02185 12.4001 6.87338 12.3308 6.7062C12.2616 6.53902 12.2328 6.35785 12.2469 6.17745C12.2609 5.99704 12.3174 5.82251 12.4116 5.66805C13.0387 4.63903 11.8611 3.46152 10.8321 4.08852C10.6776 4.18279 10.5031 4.23924 10.3227 4.25328C10.1423 4.26732 9.96111 4.23856 9.79392 4.16933C9.62674 4.1001 9.47826 3.99237 9.3606 3.8549C9.24293 3.71744 9.15939 3.55413 9.11679 3.37826L9.11753 3.37751Z" stroke="black" />
//                 <path d="M9.33333 8.5C9.33333 9.23638 8.73638 9.83333 8 9.83333C7.26362 9.83333 6.66667 9.23638 6.66667 8.5C6.66667 7.76362 7.26362 7.16667 8 7.16667C8.73638 7.16667 9.33333 7.76362 9.33333 8.5Z" stroke="black" />
//             </svg>
//         </div>
// }
